{"version":3,"file":"static/js/526.d68250c6.chunk.js","mappings":"mMAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAG,mCAAG,yGAAOC,EAAP,oDAEeF,EAAAA,EAAAA,IAAUE,GAFzB,cAEFC,EAFE,yBAGDA,EAASC,KAAKC,SAHb,gCAKRC,QAAQC,IAAR,MALQ,yDAAH,qDASIC,EAAc,WACzB,OAAOP,EAAI,8BAAD,OAA+BF,GAC1C,EAEM,SAASU,EAAWC,GACzB,OAAOT,EAAI,yBAAD,OAA0BF,EAA1B,kBAAuCW,GAClD,C,4ECnBM,SAASC,IACd,OACE,gBAAKC,MAAO,CAAEC,OAAQ,QAAtB,UACE,SAAC,KAAD,KAGL,C,sKCNYC,EAAYC,EAAAA,GAAAA,IAAH,2CAITC,EAAQD,EAAAA,GAAAA,GAAH,mEAKLE,EAAOF,EAAAA,GAAAA,GAAH,wRAaJG,EAAOH,EAAAA,GAAAA,GAAH,sGAQJI,EAAMJ,EAAAA,GAAAA,IAAH,+CAIHK,EAAYL,EAAAA,GAAAA,GAAH,2EAKTM,EAAMN,EAAAA,GAAAA,EAAH,iT,SCkBhB,EA7Ca,WACX,OAAyBO,EAAAA,EAAAA,UAAS,MAAlC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,oGAElBJ,GAAa,GAFK,UAGElB,EAAAA,EAAAA,KAHF,OAGZe,EAHY,OAIlBC,EAAQD,GACRjB,QAAQC,IAAIgB,GALM,gDAOlBK,EAAS,KAAMG,SAPG,yBASlBL,GAAa,GATK,4EAAH,qDAYnBI,GACD,GAAE,KAED,2BACE,UAAChB,EAAD,YACE,SAACE,EAAD,6BACCS,IAAa,SAACd,EAAA,EAAD,IACbY,IACC,SAACN,EAAD,UACGM,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,aAA3B,OACT,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IAAG,0CAAqCH,GACxCI,IAAKH,KAEP,SAACf,EAAD,UAAYe,KACZ,SAACd,EAAD,UAAMe,MANGH,EADF,MAYdN,IAAS,+DAIjB,C","sources":["components/API.js","components/Loader/Loader.js","pages/Home/Home.styled.js","pages/Home/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '32432509d17cea42104bbb7507a382c7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst Api = async (url = ``) => {\n  try {\n    const response = await axios.get(url);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiTrending = () => {\n  return Api(`trending/movie/day?api_key=${KEY}`);\n};\n\nexport function ApiByQuery(searchQuery) {\n  return Api(`/search/movie?api_key=${KEY}&query=${searchQuery}`);\n}\n","import { ColorRing } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <div style={{ margin: 'auto' }}>\n      <ColorRing />\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 42px;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  cursor: pointer;\n  position: relative;\n    :hover{\n    scale:1.05;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n`;\n\nexport const FilmTitle = styled.h2`\n  margin-top: 10px;\n  text-transform: uppercase;\n`;\n\nexport const Box = styled.p`\n  position: absolute;\n  z-index: 15;\n  top: 2%;\n  right: 4%;\n  display: flex;\n  width: 60px;\n  height: 30px;\n  border-radius: 5px;\n  background-color: rgba(165, 14, 14, 0.6);\n  color: whitesmoke;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { ApiTrending } from 'components/API';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Container,\n  List,\n  Title,\n  Item,\n  Img,\n  FilmTitle,\n  Box,\n} from './Home.styled';\n\nconst Home = () => {\n  const [films, seFilms] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const FetchTrending = async () => {\n      try {\n        setIsLoading(true);\n        const films = await ApiTrending();\n        seFilms(films);\n        console.log(films);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    FetchTrending();\n  }, []);\n  return (\n    <main>\n      <Container>\n        <Title>Trending today</Title>\n        {isLoading && <Loader />}\n        {films && (\n          <List>\n            {films.map(({ id, poster_path, title, vote_average }) => (\n              <Item key={id}>\n                <Img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={title}\n                />\n                <FilmTitle>{title}</FilmTitle>\n                <Box>{vote_average}</Box>\n              </Item>\n            ))}\n          </List>\n        )}\n        {error && <p>Something went wrong. Try again</p>}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["KEY","axios","Api","url","response","data","results","console","log","ApiTrending","ApiByQuery","searchQuery","Loader","style","margin","Container","styled","Title","List","Item","Img","FilmTitle","Box","useState","films","seFilms","isLoading","setIsLoading","error","setError","useEffect","FetchTrending","message","map","id","poster_path","title","vote_average","src","alt"],"sourceRoot":""}