{"version":3,"file":"static/js/578.1b0d6742.chunk.js","mappings":"iRAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAG,mCAAG,yGAAOC,EAAP,oDAEeF,EAAAA,EAAAA,IAAUE,GAFzB,cAEFC,EAFE,yBAGDA,GAHC,gCAKRC,QAAQC,IAAR,MALQ,yDAAH,qDASIC,EAAc,WACzB,OAAOL,EAAI,8BAAD,OAA+BF,GAC1C,EAEYQ,EAAa,SAACC,GACzB,OAAOP,EAAI,yBAAD,OAA0BF,EAA1B,kBAAuCS,GAClD,EAEM,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuCC,GAAvC,0FACIT,EAAI,SAAD,OAAUS,EAAV,oBAAwBX,KAD/B,kEAIA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAAwBD,GAAxB,0FACIT,EAAI,SAAD,OAAUS,EAAV,4BAAgCX,KADvC,kEAIA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA2BF,GAA3B,0FACIT,EAAI,SAAD,OAAUS,EAAV,4BAAgCX,KADvC,kE,8EC7BA,SAASc,IACd,OACE,gBAAKC,MAAO,CAAEC,OAAQ,OAAQC,QAAQ,SAAtC,UACE,SAAC,KAAD,KAGL,C,+JCNYC,EAAOC,EAAAA,GAAAA,IAAH,gFAMJC,EAASD,EAAAA,GAAAA,IAAH,mDAKNE,EAAMF,EAAAA,GAAAA,IAAH,sCAIHG,EAAOH,EAAAA,GAAAA,KAAH,2D,SCkCjB,EA5Ca,WACX,IAAQR,GAAOY,EAAAA,EAAAA,MAAPZ,GACR,GAA0Ca,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbhB,EAAAA,EAAAA,IAASD,GACNmB,MAAK,SAAAC,GACJL,EAAiBK,EAAQC,KAAKC,KAC/B,IACAC,OAAM,SAAAC,GACL9B,QAAQC,IAAI6B,EACb,IACAC,SAAQ,WACPR,GAAa,EACd,GACJ,GAAE,CAACjB,KAEF,0BACGgB,IAAa,SAACb,EAAA,EAAD,IADhB,OAEGW,QAFH,IAEGA,OAFH,EAEGA,EAAeY,KAAI,gBAAG1B,EAAH,EAAGA,GAAI2B,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,cAAeC,EAAjC,EAAiCA,aAAjC,OAClB,SAACtB,EAAD,WACE,UAACE,EAAD,YACE,SAACC,EAAD,CACEoB,IACED,EAAY,0CAC2BA,GAD3B,UAELE,GAETC,IAAKJ,KAEP,4BACE,wBAAKA,KACL,wCAAc,SAACjB,EAAD,UAAOgB,cAZhB3B,EADO,KAkBN,OAAbc,QAAa,IAAbA,OAAA,EAAAA,EAAemB,QAAS,IAAK,4DAGnC,C","sources":["components/API.js","components/Loader/Loader.js","pages/Cast/Cast.styled.js","pages/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '32432509d17cea42104bbb7507a382c7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst Api = async (url = ``) => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiTrending = () => {\n  return Api(`trending/movie/day?api_key=${KEY}`);\n};\n\nexport const ApiByQuery = (searchQuery) => {\n  return Api(`/search/movie?api_key=${KEY}&query=${searchQuery}`);\n}\n\nexport async function CompleteInformationFilm(id) {\n   return  Api(`movie/${id}?api_key=${KEY}`);\n}\n\nexport async function CastFilm(id) {\n   return  Api(`movie/${id}/credits?api_key=${KEY}`);\n}\n\nexport async function ReviewsFilm(id) {\n   return  Api(`movie/${id}/reviews?api_key=${KEY}`);\n}\n\n","import { ColorRing } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <div style={{ margin: 'auto', display:\"block\" }}>\n      <ColorRing />\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\nmargin-bottom:12px;\nfont-weight:500;\nfont-size:20px;\n`;\n\nexport const Wraper = styled.div`\ndisplay: flex;\ngap:28px;\n`;\n\nexport const Img = styled.img`\nwidth:150px;\n`;\n\nexport const Span = styled.span`\ncolor: tomato;\nmargin-left: 8px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastFilm } from 'components/API';\nimport noPhoto from '../../img/noPhoto .png';\nimport { Loader } from 'components/Loader/Loader';\nimport { Img, Item, Span, Wraper } from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [infoAboutFilm, setInfoAboutFilm] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    CastFilm(id)\n      .then(resolve => {\n        setInfoAboutFilm(resolve.data.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [id]);\n  return (\n    <ul>\n      {isLoading && <Loader />}\n      {infoAboutFilm?.map(({ id, character, original_name, profile_path }) => (\n        <Item key={id}>\n          <Wraper>\n            <Img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : `${noPhoto}`\n              }\n              alt={original_name}\n            />\n            <div>\n              <h2>{original_name}</h2>\n              <p>Character: <Span>{character}</Span></p>\n            </div>\n          </Wraper>\n        </Item>\n      ))}\n      {infoAboutFilm?.length < 1 && <p>Sorry, there is no information</p>}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["KEY","axios","Api","url","response","console","log","ApiTrending","ApiByQuery","searchQuery","CompleteInformationFilm","id","CastFilm","ReviewsFilm","Loader","style","margin","display","Item","styled","Wraper","Img","Span","useParams","useState","infoAboutFilm","setInfoAboutFilm","isLoading","setIsLoading","useEffect","then","resolve","data","cast","catch","error","finally","map","character","original_name","profile_path","src","noPhoto","alt","length"],"sourceRoot":""}