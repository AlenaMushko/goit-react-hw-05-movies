{"version":3,"file":"static/js/694.ea98ab47.chunk.js","mappings":"iRAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAG,mCAAG,yGAAOC,EAAP,oDAEeF,EAAAA,EAAAA,IAAUE,GAFzB,cAEFC,EAFE,yBAGDA,GAHC,gCAKRC,QAAQC,IAAR,MALQ,yDAAH,qDASIC,EAAc,WACzB,OAAOL,EAAI,8BAAD,OAA+BF,GAC1C,EAEYQ,EAAa,SAACC,GACzB,OAAOP,EAAI,yBAAD,OAA0BF,EAA1B,kBAAuCS,GAClD,EAEM,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAuCC,GAAvC,0FACIT,EAAI,SAAD,OAAUS,EAAV,oBAAwBX,KAD/B,kEAIA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAAwBD,GAAxB,0FACIT,EAAI,SAAD,OAAUS,EAAV,4BAAgCX,KADvC,kEAIA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA2BF,GAA3B,0FACIT,EAAI,SAAD,OAAUS,EAAV,4BAAgCX,KADvC,kE,8EC7BA,SAASc,IACd,OACE,gBAAKC,MAAO,CAAEC,OAAQ,OAAQC,QAAQ,SAAtC,UACE,SAAC,KAAD,KAGL,C,iJCNYC,EAAOC,EAAAA,GAAAA,IAAH,oEAKJC,EAAOD,EAAAA,GAAAA,KAAH,2D,mBCgCjB,EAhCgB,WACd,IAAQR,GAAOU,EAAAA,EAAAA,MAAPV,GACR,GAA0CW,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbb,EAAAA,EAAAA,IAAYF,GACTiB,MAAK,SAAAC,GACJL,EAAiBK,EAAQC,KAAKC,QAC/B,IACAC,OAAM,SAAAC,GACL5B,QAAQC,IAAI2B,EACb,IACAC,SAAQ,WACPR,GAAa,EACd,GACJ,GAAE,CAACf,KAEF,0BACGc,IAAa,SAACX,EAAA,EAAD,IADhB,OAEGS,QAFH,IAEGA,OAFH,EAEGA,EAAeY,KAAI,gBAAGxB,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACd,UAACnB,EAAD,YACE,2BAAI,SAAC,MAAD,CAAgBoB,KAAK,OAAzB,YAAuC,SAAClB,EAAD,UAAOgB,QAC9C,sCACA,uBAAIC,MAHK1B,EADG,KAON,OAAbY,QAAa,IAAbA,OAAA,EAAAA,EAAegB,QAAS,IAAK,4DAGnC,C","sources":["components/API.js","components/Loader/Loader.js","pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '32432509d17cea42104bbb7507a382c7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst Api = async (url = ``) => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiTrending = () => {\n  return Api(`trending/movie/day?api_key=${KEY}`);\n};\n\nexport const ApiByQuery = (searchQuery) => {\n  return Api(`/search/movie?api_key=${KEY}&query=${searchQuery}`);\n}\n\nexport async function CompleteInformationFilm(id) {\n   return  Api(`movie/${id}?api_key=${KEY}`);\n}\n\nexport async function CastFilm(id) {\n   return  Api(`movie/${id}/credits?api_key=${KEY}`);\n}\n\nexport async function ReviewsFilm(id) {\n   return  Api(`movie/${id}/reviews?api_key=${KEY}`);\n}\n\n","import { ColorRing } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <div style={{ margin: 'auto', display:\"block\" }}>\n      <ColorRing />\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.div`\nmargin-bottom:12px;\ntext-decoration:none;\n`;\n\nexport const Span = styled.span`\ncolor: tomato;\nmargin-left: 8px;\n`;\n\n","import { ReviewsFilm } from 'components/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { Item, Span } from './Reviews.styled';\nimport { FcReadingEbook } from \"react-icons/fc\";\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [infoAboutFilm, setInfoAboutFilm] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    ReviewsFilm(id)\n      .then(resolve => {\n        setInfoAboutFilm(resolve.data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [id]);\n  return (\n    <ul>\n      {isLoading && <Loader />}\n      {infoAboutFilm?.map(({ id, author, content }) => (         \n            <Item key={id}>\n              <h2><FcReadingEbook size=\"40\"/>Author: <Span>{author}</Span></h2>\n              <h2>Rreviews</h2>\n              <p>{content}</p>\n        </Item>\n      ))}\n      {infoAboutFilm?.length < 1 && <p>Sorry, there is no information</p>}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","axios","Api","url","response","console","log","ApiTrending","ApiByQuery","searchQuery","CompleteInformationFilm","id","CastFilm","ReviewsFilm","Loader","style","margin","display","Item","styled","Span","useParams","useState","infoAboutFilm","setInfoAboutFilm","isLoading","setIsLoading","useEffect","then","resolve","data","results","catch","error","finally","map","author","content","size","length"],"sourceRoot":""}