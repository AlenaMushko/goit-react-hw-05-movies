{"version":3,"file":"static/js/767.1ca32e2f.chunk.js","mappings":"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","sources":["components/API.js","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","components/Loader/Loader.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '32432509d17cea42104bbb7507a382c7';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst Api = async (url = ``) => {\n  try {\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const ApiTrending = () => {\n  return Api(`trending/movie/day?api_key=${KEY}`);\n};\n\nexport const ApiByQuery = (searchQuery) => {\n  return Api(`/search/movie?api_key=${KEY}&query=${searchQuery}`);\n}\n\nexport async function CompleteInformationFilm(id) {\n   return  Api(`movie/${id}?api_key=${KEY}`);\n}\n\nexport async function CastFilm(id) {\n   return  Api(`movie/${id}/credits?api_key=${KEY}`);\n}\n\nexport async function ReviewsFilm(id) {\n   return  Api(`movie/${id}/reviews/credits?api_key=${KEY}`);\n}\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 30px auto 0 auto;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  cursor: pointer;\n  position: relative;\n    :hover{\n    scale:1.05;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  height:604.5px;\n`;\n\nexport const FilmTitle = styled.h2`\n  margin-top: 10px;\n  text-transform: uppercase;\n  color:whitesmoke;\n`;\n\nexport const Box = styled.p`\n  position: absolute;\n  z-index: 15;\n  top: 2%;\n  right: 4%;\n  display: flex;\n  width: 60px;\n  height: 30px;\n  border-radius: 5px;\n  background-color: rgba(165, 14, 14, 0.6);\n  color: whitesmoke;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Container, List, Item, Img, FilmTitle, Box } from './FilmList.styled';\nimport noPhoto from '../../img/noPhoto .png';\nimport { generatePath, Link } from 'react-router-dom';\nimport { PAGE_NAMES } from 'router/paths';\n\nconst FilmList = ({ films }) => {\n  return (\n    <Container>\n      <List>\n        {films.map(({ id, poster_path, title, vote_average }) => (\n          <Item key={id}>\n            <Link to={generatePath(PAGE_NAMES.filmInfo, { id })}>\n              <Img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : `${noPhoto}`\n                }\n                alt={title}\n              />\n              <FilmTitle>{title}</FilmTitle>\n              <Box>{vote_average}</Box>\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default FilmList;\n","import { ColorRing } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <div style={{ margin: 'auto', display:\"block\" }}>\n      <ColorRing />\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const SearchBar = styled.div`\n  top: 0;\n  left: 0;\n  /* position: sticky; */\n  /* z-index: 1100; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: whitesmoke;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\nimport {\n  SearchBar,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './SearchForm.styled';\n\n const SearchFilmsForm = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchValue === '') {\n      return;\n    }\n    onSubmit(searchValue);\n  };\n\n   const handleNameChange = e => {\n     let searchValueFilms = e.currentTarget.value.trim();\n    setSearchValue(searchValueFilms.toLowerCase());\n  };\n\n  return (\n    <SearchBar>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\" >\n          <FcSearch style={{ width: '2.5em', height: '2.5em' }} />\n          <SearchFormButtonLabel >\n            Search\n          </SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          className=\"input\"\n          type=\"text\"\n          value={searchValue}\n          onChange={handleNameChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n        />\n      </SearchForm>\n    </SearchBar>\n  );\n};\n\nexport default SearchFilmsForm;\n\nSearchFilmsForm.propTypes = { onSubmit: PropTypes.func };\n","import styled from 'styled-components';\n\nexport const NotFilms = styled.h2`\n  font-size:36px;\n  text-align:center;\n`;\n\nexport const Span = styled.span`\n color: tomato;\n`;","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { ApiByQuery } from 'components/API';\nimport SearchFilmsForm from 'components/SearchForm/SearchForm';\nimport FilmList from 'components/FilmList/FilmList';\nimport { NotFilms, Span } from './Movies.styled';\n\nconst Movies = () => {\n  const [films, seFilms] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const filmName = searchParams.get('filmName');\n\n  useEffect(() => {\n    if (filmName === '') {\n      return;\n    }\n\n    if (filmName !== null) {\n      ApiByQuery(filmName)\n        .then(resolve => {\n          let result = resolve.data.results;\n          setIsLoading(true);\n          if (result.length < 1) {\n            setIsEmpty(true);\n            return;\n          } else {\n            seFilms(result);\n            setIsEmpty(false);\n          }\n        })\n        .catch(error => {\n          setError(error.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [filmName]);\n\n  const handleFormSubmit = filmName => {\n    const nextFilmName = filmName !== '' ? { filmName } : {};\n    setSearchParams(nextFilmName);\n    seFilms([]);\n    console.log(filmName);\n  };\n\n  return (\n    <main>\n      <SearchFilmsForm onSubmit={handleFormSubmit} />\n      {isLoading && <Loader />}\n      {films && <FilmList films={films} />}\n      {isEmpty && (\n        <NotFilms>\n          Sorry, we did not find a movie with the title <Span>{filmName}</Span>\n        </NotFilms>\n      )}\n      {error && <p>Something went wrong. Try again</p>}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","axios","Api","url","response","console","log","ApiTrending","ApiByQuery","searchQuery","CompleteInformationFilm","id","Container","styled","List","Item","Img","FilmTitle","Box","films","map","poster_path","title","vote_average","to","generatePath","PAGE_NAMES","src","noPhoto","alt","Loader","style","margin","display","SearchBar","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onSubmit","useState","searchValue","setSearchValue","e","preventDefault","type","width","height","className","value","onChange","searchValueFilms","currentTarget","trim","toLowerCase","autoComplete","autoFocus","placeholder","NotFilms","Span","seFilms","isLoading","setIsLoading","error","setError","isEmpty","setIsEmpty","useSearchParams","searchParams","setSearchParams","filmName","get","useEffect","then","resolve","result","data","results","length","catch","message","finally","FilmList"],"sourceRoot":""}